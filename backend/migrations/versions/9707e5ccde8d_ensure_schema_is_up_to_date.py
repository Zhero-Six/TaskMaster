"""Ensure schema is up to date

Revision ID: 9707e5ccde8d
Revises: 42d57126ded8
Create Date: 2025-06-25 23:33:32.867519

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9707e5ccde8d'
down_revision = '42d57126ded8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('category', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_categories_created_by'))
        batch_op.drop_index(batch_op.f('idx_categories_name'))

    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_projects_created_at'))
        batch_op.drop_index(batch_op.f('idx_projects_creator'))

    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_tasks_assigned_to'))
        batch_op.drop_index(batch_op.f('idx_tasks_due_date'))
        batch_op.drop_index(batch_op.f('idx_tasks_project'))
        batch_op.drop_index(batch_op.f('idx_tasks_status'))

    with op.batch_alter_table('task_category', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_task_categories_category'))
        batch_op.drop_index(batch_op.f('idx_task_categories_task'))
        batch_op.create_unique_constraint('uq_task_category', ['task_id', 'category_id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_users_email'))
        batch_op.drop_index(batch_op.f('idx_users_username'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_users_username'), ['username'], unique=False)
        batch_op.create_index(batch_op.f('idx_users_email'), ['email'], unique=False)

    with op.batch_alter_table('task_category', schema=None) as batch_op:
        batch_op.drop_constraint('uq_task_category', type_='unique')
        batch_op.create_index(batch_op.f('idx_task_categories_task'), ['task_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_task_categories_category'), ['category_id'], unique=False)

    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_tasks_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('idx_tasks_project'), ['project_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_tasks_due_date'), ['due_date'], unique=False)
        batch_op.create_index(batch_op.f('idx_tasks_assigned_to'), ['assigned_to'], unique=False)

    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_projects_creator'), ['creator_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_projects_created_at'), ['created_at'], unique=False)

    with op.batch_alter_table('category', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_categories_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('idx_categories_created_by'), ['created_by'], unique=False)

    # ### end Alembic commands ###
